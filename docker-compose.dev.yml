version: "3.9"

services:
  postgres:
    image: postgres:16
    restart: unless-stopped
    env_file: .env.dev
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    restart: unless-stopped
    volumes:
      - redis_data:/data

  backend:
    build:
      context: ./backend
      dockerfile: DockerFile.dev
    env_file: .env.dev
    command: sh -c "./entrypoint.sh python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    environment:
      SERVICE: backend
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432

  celery-worker:
    build:
      context: ./backend
      dockerfile: DockerFile.dev
    env_file: .env.dev
    depends_on:
      - backend
      - redis
    volumes:
      - ./backend:/app
    command: sh -c "./entrypoint.sh celery -A config worker --loglevel=info"
    restart: unless-stopped
    environment:
      SERVICE: celery-worker
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432

  celery-beat:
    build:
      context: ./backend
      dockerfile: DockerFile.dev
    env_file: .env.dev
    depends_on:
      - backend
      - redis
    volumes:
      - ./backend:/app
    command: sh -c "./entrypoint.sh celery -A config beat -l info"
    restart: unless-stopped
    environment:
      SERVICE: celery-beat
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432

  frontend:
    build:
      context: ./frontend
      dockerfile: DockerFile.dev
    env_file: .env.dev
    volumes:
      - ./frontend:/app
    ports:
      - "5173:5173"
    depends_on:
      - backend

volumes:
  postgres_data:
  redis_data:
